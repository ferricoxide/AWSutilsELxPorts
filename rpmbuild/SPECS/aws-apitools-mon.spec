%define aws_product_name_env  AWS_CLOUDWATCH_HOME
%define aws_product_name      mon

Summary:   Tools and scripts for Amazon CloudWatch
Name:      aws-apitools-%{aws_product_name}
Version:   1.0.20.0
Release:   2%{?dist}
License:   Amazon Software License
Group:     Amazon/Tools
# http://aws.amazon.com/developertools/2534
URL:       http://aws.amazon.com/cloudwatch
Source0:   %{name}-%{version}.zip
Source1:   http://ec2-downloads.s3.amazonaws.com/cloudwatch-samples/CloudWatchMonitoringScripts-v1.1.0.zip
BuildArch: noarch
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
Prefix:    /opt
Vendor:    Amazon AWS
Requires:  coreutils
Requires:  jre-headless >= 1.6.0
Requires:  aws-apitools-common
Requires:  perl(LWP::Protocol::https)
BuildRequires: dos2unix

Patch0:    cloudwatchmonitoring-inc.patch

%define aws_path              %{prefix}/aws
%define aws_bin_path          %{aws_path}/bin
%define aws_product_name_v    %{aws_product_name}-%{version}
%define aws_product_path      %{aws_path}/apitools/%{aws_product_name_v}
%define aws_product_path_link %{aws_path}/apitools/%{aws_product_name}

%description
This package includes tools and scripts for using Amazon
Cloudwatch. Amazon CloudWatch monitors AWS resources such as Amazon
EC2 and Amazon RDS DB instances, and can also monitor custom metrics
generated by a customer's applications and services.

%prep
%setup -q -a 1 -n CloudWatch-%{version}
for i in $(find %{_builddir} -type f); do
    if [ ! "$(file $i | grep CRLF)" = "" ]; then
        dos2unix $i
    fi
done

pushd aws-scripts-mon
%patch0 -p1
popd

%build
#Released as jar files at this point, no need to build

# Make sure we don't install .cmd files
%__rm bin/*.cmd
%___build_post

%install
[ ${RPM_BUILD_ROOT} != "/" ] && %__rm -rf ${RPM_BUILD_ROOT}

# Build installation directory structure
%__mkdir_p %{buildroot}/%{aws_product_path}
%__mkdir   %{buildroot}/%{aws_product_path}/bin
%__mkdir   %{buildroot}/%{aws_product_path}/lib
%__ln_s    %{aws_product_name_v} %{buildroot}/%{aws_product_path_link}

%__mkdir_p %{buildroot}/%{aws_bin_path}

# Install all scripts in bin directory
%__install -m 755 bin/* %{buildroot}/%{aws_product_path}/bin

# Install all text files:
%__install -m 644 *.txt  %{buildroot}/%{aws_product_path}/
%__install -m 644 *.TXT  %{buildroot}/%{aws_product_path}/

# Install Java libs
%__install -m 755 lib/* %{buildroot}/%{aws_product_path}/lib

# Install CloudWatch Monitoring Scripts
%__install -m 755 aws-scripts-mon/mon-get-instance-stats.pl %{buildroot}/%{aws_product_path}/bin/mon-get-instance-stats
%__install -m 755 aws-scripts-mon/mon-put-instance-data.pl %{buildroot}/%{aws_product_path}/bin/mon-put-instance-data
%__install -m 644 aws-scripts-mon/CloudWatchClient.pm %{buildroot}/%{aws_product_path}/lib

# Create sym links
for i in %{buildroot}/%{aws_product_path}/bin/*; do
    %define command_name $(basename $i)
    if [ "%{command_name}" = "service" ]; then
        continue
    fi
    %__ln_s %{aws_product_path}/bin/%{command_name} \
        %{buildroot}/%{aws_bin_path}/%{command_name}
done

# Build the environment script
echo "# Set %{aws_product_name_env}.  Called from /etc/profile.d/aws-product-common" > %{buildroot}/%{aws_product_path}/environment.sh
echo "[ -z \"\$%{aws_product_name_env}\" ] && %{aws_product_name_env}=\"%{aws_product_path_link}\"" >> %{buildroot}/%{aws_product_path}/environment.sh
echo "export %{aws_product_name_env}" >> %{buildroot}/%{aws_product_path}/environment.sh

%clean
[ ${RPM_BUILD_ROOT} != "/" ] && %__rm -rf ${RPM_BUILD_ROOT}

%files
%defattr(0644,root,root,-)
%doc %{aws_product_path}/*.txt
%doc %{aws_product_path}/*.TXT

%attr(0755,root,root) %dir %{aws_product_path}
%attr(0755,root,root) %dir %{aws_product_path}/lib

# Scripts installed with execute permission
%attr(0755,root,root) %dir %{aws_product_path}/bin
%attr(0755,root,root) %dir %{aws_bin_path}

# The sym links for easy access
%{aws_bin_path}/*
%{aws_product_path_link}

# Everything else
%{aws_product_path}/lib/*
%attr(0755,root,root) %{aws_product_path}/bin/*
%{aws_product_path}/environment.sh

%changelog
* Tue Aug 09 2011 Nathan Blackham <blackham@amazon.com>
- add compat libs 

* Tue Apr 13 2010 KaOS <kaos@amazon.com>
- Requires: jre

* Thu Feb 25 2010 KaOS <kaos@amazon.com>
- 1.0.9.0
- Initial packaging

